while
do
for
foreach
checked
fixed
lock
namespace
int
char
float
short
long
byte
double
sbyte
string
ulong
integer
boolean
const
enum
dynamic
tuple
using
random
<
>
<=
>=
!=
goto
return
break
main
new
object
alert
message
null
none
clear
Math.abs
Math.exp
Math.log
else
catch
otherwise
raise
switch
if
try
abstract
class
record
case
private
static
protected
public
local
internal
sealed
implicit
explicit
<head>
<body>
<class>
<paragraph>
script
<div>
<strong>
</head>
</body>
</class>
</paragraph>
</script>
</div>
</strong>
Math.acos
Math.acosh
Math.asin
Math.asinh
Math.atan
Math.atan2
Math.atanh
Math.cos
Math.cosh
Math.sin
Math.sinh
Math.tan
Math.tanh
Pause
Cin
Cout
printf
print
println
scan
scanf
input
and
or
not
&&
array
{
}
(
)
system
ChangeType
ToBoolean
ToByte
ToChar
ToDateTime
ToDecimal
ToDouble
ToHexString
ToInt16
ToInt32
ToInt64
ToSByte
ToSingle
ToString
ToUInt16
ToUInt32
ToUInt64
Parse
void
Math.log10
Math.log1p
Math.log2
Math.max
Math.min
Math.random
Math.sort
Math.shuffle
Math.choice
Math.round
Math.sqrt
Math.pow
Math.ceil
Math.floor
Math.cbrt
Math.exp
Math.sign
Math.randint
Math.random.normal
Math.random.binomial
Math.random.poisson
Math.random.uniform
Math.random.logistic
Math.random.multinomial
Math.random.exponential
Math.random.chisquare
Math.random.rayleigh
Int21H
Math.lcm
Math.gcd
Math.trunc
Math.fix
Math.around
Math.hypot
Math.deg2rad
Math.rad2deg
Math.quadratic
Math.cubic
Math.squareArea
Math.rectArea
Math.circleArea
Math.triangleArea
Math.trapArea
Math.regpolyArea
Math.bigmul
Math.BitDecrement
Math.BitIncrement
Math.Clamp
Math.CopySing
Math.DivRem
Math.FusedMultiplyAdd
Math.MaxMagnitude
Math.MinMagnitude
Math.pi
Math.scale
Math.scaleB
__sptr
add
remove
struct
interface class
record
enum
exception
callable
future
synchronized
in
out
implement
implements
//
#
--
exit
die
union
join
inner join
left join
right join
full join
self join
clone
copy
(++)
(--)
nil
zeroes
mutable
noexcept
operator
signed
sizeof
this
throw
typeid
volatile
elif
def
del
from 
continue
with
global
exec
assert
debugger
delete
const
export
extends
finally
function
super
typeof
var
yield
package
await
bytes
__raise
__stdcall
final
__m128
_ptr32
_ptr64
native
__restrict
transient
get
set
arguments
instanceof
module
requires
strictfp
*
/
-
(+')
(=')
import
lambda
pass
__alignof
or_eq
__assume
__based
__cdecl
__declspec
__event
__except
__fastcall
Try-finally
__forceinline
__inline
__hookd
__if_exists
__if_not_exists
__super
__thiscall
__unaligned
__unhook
__uptr
__uuidof
__vectorcall
__virtual_inheritancee
__w64
__wchar_t